openapi: 3.0.1

info:
  title: Bazario marketplace Panel API
  description: |
    The Bazario marketplace Panel API is a comprehensive RESTful API
    that serves as the backbone of the marketplace`s digital platform.
    It provides a wide range of endpoints for managing crud-operation of ad, users
    and admins.

  version: v0.0.1

servers:
  - url: https://bazario-mkur.onrender.com
    description: Remote service for managing platform of the Bazario marketplace
  - url: http://127.0.0.1:8080
    description: Local service for managing platform of the Bazario marketplace

tags:
  - name: Authentication
    description: |
      Endpoints for user authentication.
  - name: User
    description: |
      Endpoints for users to manage yourself.
      Includes registration, updating, deleting user`s account.
  - name: User parameter
    description: |
      Endpoints for users manage user parameter.
  - name: Reset Password
    description: |
      Endpoints for users reset password.
  - name: Favorite
    description: |
      Endpoints for users to manage favorite ad on the website.
  - name: Comment
    description: |
      Endpoints for managing museum data in the admin API.
      This API handles operations such as adding and updating museum data.
  - name: Category
    description: |
      Endpoint for admin and user to manage category.
  - name: Ad
    description: |
      Endpoints for users to manage ad on the website.
  - name: AdParameter
    description: |
      Endpoints for admin to manage ad parameters on the website.
  - name: Image
    description: |
      Endpoints for users to manage image on the website.

paths:
  /public/login:
    post:
      tags:
        - Authentication
      description: User login endpoint
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        200:
          description: Authenticated successfully. Get token.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JWT_REFRESH_TOKEN=abcs123
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/refreshToken:
    post:
      tags:
        - Authentication
      description: User login endpoint
      operationId: refreshToken
      parameters:
        - in: cookie
          name: refreshToken
          required: true
          schema:
            type: string
      responses:
        200:
          description: Authenticated successfully. Get token.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JWT_REFRESH_TOKEN=abcs123
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/logout:
    post:
      tags:
        - Authentication
      security:
        - bearerAuth: []
      description: User logout endpoint
      operationId: logoutToken
      parameters:
        - in: cookie
          name: refreshToken
          schema:
            type: string
      responses:
        204:
          description: Authenticated successfully. Get token.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JWT_REFRESH_TOKEN=abcs123
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/registration:
    post:
      tags:
        - User
      summary: Create user
      description: Creates user with the provided information.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        204:
          description: Registration data load successfully.
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/send/{type}:
    post:
      tags:
        - User
      summary: Send message to email of user
      description: Send verification code or reset link to email of user
      operationId: sendMessage
      parameters:
        - $ref: '#/components/parameters/typeEmailMessage'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: email
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/email/verify:
    post:
      tags:
        - User
      summary: Verify Email
      description: Verify Email after registration user
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationEmail'
        required: true
      responses:
        200:
          description: Registration successfully. Get token.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JWT_REFRESH_TOKEN=abcs123
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/user:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get user information
      description: Get user information
      operationId: getUserInformation
      responses:
        200:
          description: Registration successfully. Get token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUserInformation'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Update user
      description: Update user`s field. If update email you will also need verify it. Role and isLocked fields change only admin.
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
        required: true
      responses:
        200:
          description: Registration successfully. Get token.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInformation'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Delete an existing User
      description: Deletes an existing User by its unique identifier.
      operationId: deleteUser

      responses:
        204:
          description: User deleted successfully
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/user/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Get other user information
      description: Get other user information
      operationId: getOtherUserInformation
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        200:
          description: Registration successfully. Get token.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInformation'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/user/{id}:
    patch:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Update user by admin
      description: Update user`s field by admin. Role and isLocked fields change only admin.
      operationId: updateUserByAdmin
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUser'
        required: true
      responses:
        200:
          description: Registration successfully. Get token.
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInformation'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/user/parameter:
    post:
      security:
        - bearerAuth: []
      tags:
        - User parameter
      summary: Create user parameter by user
      description: Create user parameter by user
      operationId: createUserParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicAdminParameter'
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/user/parameter/{id}:
    put:
      security:
        - bearerAuth: []
      tags:
        - User parameter
      summary: Put user parameter by admin
      description: Put user parameter by admin
      operationId: putUserParameter
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicAdminParameter'
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User parameter
      security:
        - bearerAuth: []
      summary: Delete user parameter by user
      description: Delete user parameter by user
      operationId: deleteUserParameter
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/resetPassword:
    post:
      tags:
        - Reset Password
      summary: Reset password of user
      description: Reset password of user by hex.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/favorite:
    get:
      security:
        -  bearerAuth: []
      tags:
        - Favorite
      summary: Get favorite ad
      description: Get favorite ad
      operationId: getFavorite
      responses:
        200:
          description: Add ad successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/favorite/{id}:
    post:
      security:
        -  bearerAuth: []
      tags:
        - Favorite
      summary: Add favorite add
      description: Add favorite add
      operationId: addFavorite
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Add ad successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        -  bearerAuth: []
      tags:
        - Favorite
      summary: Delete favorite ad
      description: Delete ad from the favorite list
      operationId: deleteFavorite
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Delete ad successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/comment/{id}/totalRating:
    get:
      tags:
        - Comment
      summary: Get total rating of user by user`s id
      description: Get total rating of user by user`s id from comment list of user
      operationId: getTotalRating
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        200:
          description: Get comment successfully
          content:
            text/plain:
              schema:
                type: integer
                format: int32
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/comment/{id}:
    get:
      tags:
        - Comment
      summary: Get comments for user by user`s id
      description: |
        Get comments for user by user`s id from comment list of user<br>
        A map of key-value pairs for filtering.<br>
        Example Pageable:  "size":"16", "page":"0","sort":"rating,desc"(field,asc|desc)<br>
      operationId: getComments
      parameters:
        - $ref: '#/components/parameters/idParam'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        200:
          description: Get comment successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PageComment'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/comment/{id}:
    post:
      security:
        -  bearerAuth: []
      tags:
        - Comment
      summary: Add comment for user by user`s id
      description: Add comment for user by user`s id to comment list of user
      operationId: addComment
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        204:
          description: Add comment successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      security:
        -  bearerAuth: []
      tags:
        - Comment
      summary: Put comment for user by user`s id
      description: Put comment for user by user`s id to comment list of user
      operationId: putComment
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        204:
          description: Add comment successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        -  bearerAuth: []
      tags:
        - Comment
      summary: Delete comment by id
      description: Delete comment by id from comment list of user
      operationId: deleteComment
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Delete comment successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/comment/{idEvaluator}/{idEvaluated}:
    put:
      security:
        -  bearerAuth: []
      tags:
        - Comment
      summary: Put comment for user by user`s id
      description: Put comment for user by user`s id to comment list of user
      operationId: putCommentByAdmin
      parameters:
        - in: path
          required: true
          description: Unique identifier of entity
          schema:
            type: integer
            format: int64
          name: idEvaluator
        - in: path
          required: true
          description: Unique identifier of entity
          schema:
            type: integer
            format: int64
          name: idEvaluated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        required: true
      responses:
        204:
          description: Add coment successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/categories:
    get:
      tags:
        - Category
      summary: Get categories
      description: Get categories
      operationId: getCategories
      responses:
        200:
          description: Get categories successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/category/{id}:
    get:
      tags:
        - Category
      summary: Get category
      description: Get category. Use filter.
      operationId: getCategory
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        200:
          description: Get categories successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponseDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/category/{id}/ad/parameters:
    get:
      tags:
        - Category
      summary: Get ad parameters by category id
      description: Get ad parameters by category id. Use create ad.
      operationId: getCategoryAdParameter
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        200:
          description: Get categories successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdParameterDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/category:
    post:
      security:
        -  bearerAuth: []
      tags:
        - Category
      summary: Add category by admin
      description: Add category by admin
      operationId: addCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestDto'
        required: true
      responses:
        204:
          description: Add category successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/category/{id}:
    put:
      security:
        -  bearerAuth: []
      tags:
        - Category
      summary: Put category by admin
      description: Put category by admin
      operationId: putCategory
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequestDto'
        required: true
      responses:
        204:
          description: Add category successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        -  bearerAuth: []
      tags:
        - Category
      summary: Delete category by admin by categories id
      description: Delete category by admin
      operationId: deleteCategory
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Add category successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/ad/parameter:
    post:
      tags:
        - AdParameter
      security:
        -  bearerAuth: []
      summary: Create ad parameter by admin
      description: Create ad parameter by admin
      operationId: createAdParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicAdminParameter'
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /admin/ad/parameter/{id}:
    put:
      tags:
        - AdParameter
      security:
        -  bearerAuth: []
      summary: Put ad parameter by admin
      description: Put ad parameter by admin
      operationId: PutAdParameter
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicAdminParameter'
        required: true
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - AdParameter
      security:
        -  bearerAuth: []
      summary: Delete ad parameter by user
      description: Delete ad parameter by user
      operationId: deleteAdParameter
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Send verification code to email
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/ads:
    get:
      tags:
        - Ad
      summary: Get ads
      description: |
        Get ads by filter.<br>
        A map of key-value pairs for filtering.<br>
        Example Pageable:  "size":"16", "page":"0","sort":"price,decs"(field,asc|desc)<br>
        Example search: "title":"abc"<br>
        Example ad parameter: "ad_id_256":"Bosh|Samsung|LG"(ad_id_ is type ad id prefix, | is separator for multiparameter)<br>
        Example user parameter: "user_id_35":"Student"(user_id is type user id prefix)<br>
        Example price: "price":"10.53||156.20"(10.53<= price <=156.20, || is seperetor)<br>
      operationId: getAds
      parameters:
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        200:
          description: Create ad successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAd'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/ad/{id}:
    get:
      tags:
        - Ad
      summary: Get ad
      description: Get ad parameter by user
      operationId: getAd
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        200:
          description: Create ad successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /public/ad/{ids}:
    get:
      tags:
        - Ad
      summary: Compares ad
      description: Compares ad parameter by ads
      operationId: comparesAd
      parameters:
        - in: path
          required: true
          name: ids
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        200:
          description: Compare ads successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/ad:
    post:
      tags:
        - Ad
      security:
        -  bearerAuth: []
      summary: Create or get ad by user
      description: Create or get ad with status NEW and image files by user
      operationId: createOrGetAd
      responses:
        200:
          description: Create ad successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdDto'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /private/ad/{id}:
    patch:
      tags:
        - Ad
      security:
        -  bearerAuth: []
      summary: Patch ad by user
      description: Patch ad parameter by user by ad`s id
      operationId: patchAd
      parameters:
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAd'
        required: true
      responses:
        204:
          description: Create ad successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Ad
      security:
        -  bearerAuth: []
      summary: Delete ad by user
      description: Delete ad parameter by user by ad`s id
      operationId: deleteAd
      parameters:
        - $ref: '#/components/parameters/idParam'
      responses:
        204:
          description: Create ad successfully
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        429:
          description: Too many request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /image/{type}/{id}:
    post:
      security:
        - bearerAuth: []
      tags:
        - Image
      description: Load and save image. If typy is ad than parameter id is ad\`s id. If type is avatar parameter id is user\`s id, just admin operation, another ignore.
      operationId: saveImage
      parameters:
        - $ref: '#/components/parameters/typeImage'
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type:  string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: Payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      security:
        - bearerAuth: []
      tags:
        - Image
      description: Load and change image.If typy is ad than parameter id is ad\`s id. If type is avatar parameter id is user\`s id, just admin operation, another ignore.
      operationId: changeImage
      parameters:
        - $ref: '#/components/parameters/typeImage'
        - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                oldValue:
                  type: string
                  format: uri
                file:
                  type: string
                  format: binary
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        413:
          description: Payload too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Image
      description: Delete image. Parameter id is ad or user id. If typy is ad than parameter id is ad\`s id. If type is avatar parameter id is user\`s id, just admin operation, another ignore.
      operationId: deleteImage
      parameters:
        - $ref: '#/components/parameters/typeImage'
        - $ref: '#/components/parameters/idParam'
        - $ref: '#/components/parameters/urlParameter'
      responses:
        204:
          description: Delete successful
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorize
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AuthenticationRequest:
      description:  Authentication form
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
        password:
          type: string
          format: password
          pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[#@&])[\w#@&]{8,}$'
          nullable: true
    ErrorResponse:
      description: Error message with timestamp
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    VerificationEmail:
      description: Verify email
      properties:
        email:
          type: string
          format: email
        hex:
          type: string
    ResetPassword:
      description: Reset password
      allOf:
        - $ref: '#/components/schemas/AuthenticationRequest'
      properties:
        hex:
          type: string
    RegistrationRequest:
      description: Registration user
      allOf:
        - $ref: '#/components/schemas/AuthenticationRequest'
      type: object
      properties:
        firstName:
          type: string
          pattern: '^[A-ZА-ЯІЇЄ][a-zа-яіїє]{1,20}$'
          nullable: true
        phoneNumber:
          type: string
          pattern: '^(\+38|38|8)?0\d{9}$'
          nullable: true
    UserInformation:
      description: Registration user
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        cityName:
          type: string
    PrivateUserInformation:
      description: Registration user
      allOf:
        - $ref: '#/components/schemas/UserInformation'
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicParameter'
    PatchUser:
      description: Patch user field
      allOf:
        - $ref: '#/components/schemas/RegistrationRequest'
      type: object
      properties:
        cityName:
          type: string
          minLength: 3
          maxLength: 100
          nullable: true
        cityCoordinate:
          type: string
          pattern: '^\d+,?\d*\|\d,?\d*$'
          nullable: true
        verificationCode:
          type: string
          pattern: '^\w{6}$'
          description: Verification code from email of user
          nullable: true
        userParameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicUserParameter'
          nullable: true
        role:
          type: string
        isLocked:
          type: boolean
          default: false
    BasicUserParameter:
      description: Basis user parameter for user or ad
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
    BasicAdminParameter:
      description: Basis admin parameter for user or ad
      type: object
      properties:
        name:
          type: string
        restrictionPattern:
          type: string
        descriptionPattern:
          type: string
    BasicParameter:
      allOf:
        - $ref: '#/components/schemas/BasicUserParameter'
        - $ref: '#/components/schemas/BasicAdminParameter'
    AdParameterDto:
      allOf:
        - $ref: '#/components/schemas/BasicAdminParameter'
      type: object
      properties:
        id:
          type: integer
          format: int64
    CategoryRequestDto:
      type: object
      properties:
        name:
          type: string
        adParameterIds:
          type: array
          items:
            type: integer
            format: int64
    CategoryResponseDto:
      type: object
      properties:
        name:
          type: string
        adParameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicParameter'
        userParameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicParameter'
    CommentDto:
      description: A user's comment about another user who added an ad
      type: object
      properties:
        rating:
          type: integer
          format: int32
          minimum: 0
          maximum: 9
        description:
          type: string
          pattern: '^(?!.*\d{9,})[\w\s]{3,200}$'
    AdDto:
      description: Ad information
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            type: string
            format: uri
        price:
          type: number
        adParameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicUserParameter'
    PatchAd:
      description: Patch ad
      type: object
      properties:
        title:
          type: string
          pattern: '^(?!.*\d{9,})[\w\s]{3,20}$'
          nullable: true
        description:
          type: string
          pattern: '^(?!.*\d{9,})[\w\s]{3,200}$'
          nullable: true
        price:
          type: number
          nullable: true
        adParameters:
          type: array
          items:
            $ref: '#/components/schemas/BasicUserParameter'
          nullable: true
        status:
          $ref: '#/components/schemas/AdStatus'
    AdStatus:
      type: string
      enum:
        - NEW
        - ACTIVE
        - DISABLE
        - DELETE
      nullable: true
    AdResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        imageUrl:
          type: string
          format: uri
        price:
          type: number
    PageAd:
      type: object
      description: return Page<AdResponseDto>
      x-extends: BasisPage
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AdResponseDto'
    PageComment:
      type: object
      description: return Page<CommentDto>
      x-extends: BasisPage
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
  parameters:
    idParam:
      name: id
      in: path
      required: true
      description: Unique identifier of entity
      schema:
        type: integer
        format: int64
    typeImage:
      name: type
      in: path
      required: true
      schema:
        type: string
        enum:
          - ad
          - avatar
    typeEmailMessage:
      name: type
      in: path
      required: true
      schema:
        type: string
        enum:
          - verify
          - reset
    basisParameter:
      name: params
      in: query
      required: false
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                value:
                  type: string
    filtersParameter:
      name: filters
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: object
        additionalProperties:
          type: string
    urlParameter:
      name: url
      in: query
      required: true
      schema:
        type: string
        format: uri
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT